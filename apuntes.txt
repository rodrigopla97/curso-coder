Clase 1 - 10/08

VARIABLES

Declaracion de variable ES5 (ya no se utiliza - PROHIBIDO(?))

var primeraVariable = "mi primera variable";
var segundaVariable = 5;

Declaracion de variable ES6 (esta es la que se utiliza)

let terceraVariable = "primera variable con let";
const primeraConstante = "hola a todos";
primeraConstante = 6; // tiraría error ya que no se puede redefinir constante
terceraVariable = 6; // esto lo permite

BLOQUE
{
  var primera = "variable var";
  let segunda = "variable let";

  console.log(primera);
  console.log(segunda);
  // Se muestran en consola
}
console.log(primera);
console.log(segunda);
// Solo se muestra var ya que "let" es variable local (de bloque) y "var" global

PROMPT y ALERT

prompt: Recuadro para que el usuario ingrese información
prompt("Ingrese su nombre");

alert: Recuadro para que el usuario reciba información
alert("Bienvenido");

------------------------------------------------------------------------------------------------

Clase 2:

Condición:

if (condition) {  
}

Operadores: 

== Es igual -> ejemplo a == b
=== Es estrictamente igual -> ejemplo a === b
3 == "3" (true)
3 === "3" (false)
!= Distinto -> ejemplo a != b
!== Estrictamente distinto -> ejemplo a !== b
<,<=,>,>= Menor, Menor o igual, Mayor o igual


Codigo ejercicio.js:
let horasTrabajadas = prompt("Cuantas horas trabajaste esta semana?");
let profesion = prompt("Eres ingeniero, medico o programador?");
let horasExtras;
const horasJornada = 40;
let pago;

if (profesion === "ingeniero") {
  valorHora = 40;
} else if (profesion === "medico") {
  valorHora = 45;
} else if (profesion === "programador") {
  valorHora = 50;
} else {
  alert("No analizamos tu profesión");
}

if (
  horasTrabajadas > 40 &&
  horasTrabajadas <= 60 &&
  (profesion === "ingeniero" || profesion === "medico")
) {
  horasExtras = horasTrabajadas - horasJornada;
  pago = horasJornada * valorHora + horasExtras * (1.5 * valorHora);
} else if (
  horasTrabajadas > 60 &&
  (profesion === "ingeniero" || profesion === "medico")
) {
  horasExtras = horasTrabajadas - horasJornada;
  pago = horasJornada * valorHora + horasExtras * (2.5 * valorHora);
} else if (
  horasTrabajadas > 40 &&
  horasTrabajadas <= 60 &&
  profesion === "programador"
) {
  horasExtras = horasTrabajadas - horasJornada;
  pago = horasJornada * valorHora + horasExtras * (2 * valorHora);
} else if (horasTrabajadas > 60 && profesion === "programador") {
  horasExtras = horasTrabajadas - horasJornada;
  pago = horasJornada * valorHora + horasExtras * (3 * valorHora);
} else {
  pago = horasTrabajadas * valorHora;
}

//Pero es mas simple acá :

if (horasTrabajadas > 40 && horasTrabajadas <= 60) {
  horasExtras = horasTrabajadas - horasJornada;
  if (profesion === "ingeniero" || profesion === "medico") {
    pago = horasJornada * valorHora + horasExtras * (1.5 * valorHora);
  } else {
    pago = horasJornada * valorHora + horasExtras * (2 * valorHora);
  }
} else if (horasTrabajadas > 60) {
  horasExtras = horasTrabajadas - horasJornada;
  if (profesion === "ingeniero" || profesion === "medico") {
    pago = horasJornada * valorHora + horasExtras * (2.5 * valorHora);
  } else {
    pago = horasJornada * valorHora + horasExtras * (3 * valorHora);
  }
} else {
  pago = horasTrabajadas * valorHora;
}
------------------------------------------------------------------------------------------------

Clase 3 :

Ciclos:

for: Por conteo

for (let index = 0; index < array.length; index++) {
  const element = array[index];
  // if (condition) {
  // } else if (condition2) {
  // } else {
  // }
}

for (let i = 0; i <= 10; i++) {
  console.log("Iteracion numero " + i);
}

Muestra iteracion del 1 al 10

En una condición dentro del for:
  if (i === 6) {
    break; 
  }
El break interrumpe una vez que i sea 6

En una condición dentro del for:
  if (i === 6) {
    continue; 
  }
El continue saltea a i una vez que i sea 6 y continua el ciclo

Ejercicio ejemplo 1:

let numero = parseInt(prompt("Ingrese un numero"));
let resultadoSuma = 0;

for (let i = 0; i <= numero; i++) {
  resultadoSuma = resultadoSuma + i;
  console.log(i, resultadoSuma);
}

Ejercicio ejemplo 2:
let numero1 = parseInt(prompt("Ingrese un numero"));
let numero2 = parseInt(prompt("Ingrese segundo numero"));

if (numero1 < numero2) {
  for (let i = numero1; i <= numero2; i++) {
    console.log(i);
  }
} else if (numero1 > numero2) {
  for (let i = numero1; i >= numero2; i--) {
    console.log(i);
  }
} else {
  alert("Los numeros ingresados son iguales");
}

while: Ciclo condicional

while (condition) {
  
}

Ejemplo con while:

let i = 0;
while (i <= 5) {
  console.log("Iteracion numero con while", i);
  i++;
}
console.log(i);

do... while: Ciclo condicional

do {
  
} while (condition);

Ejemplo do...while:

let numero = parseInt(prompt("Ingresa un numero"));
let iteracion = 1;

do {
  numero = numero + 5;
  let iteracion = 1;
  console.log(numero);
  iteracion++;
} while (iteracion <= 8);

switch: 

switch (key) {
  case value:
    
    break;

  default:
    break;
}

------------------------------------------------------------------------------------------------

Clase 4:

Funciones

function name(params) {
    
}

Ejemplo: 

Declaro la función
function sumar() {
  const numero1 = parseInt(prompt("Ingrese un numero"));
  const numero2 = parseInt(prompt("Ingrese un numero"));

  const resultado = numero1 + numero2;
  alert("El resultado es " + resultado);
}

Llamo a la función
sumar() //Llamo a la función

Función por parametro:

function restar(numero1, numero2) {
  const resultado = numero1 - numero2;
  alert("El resultado es " + resultado);
}

restar(15,7)

Arrow function

let exponente = function (num, exponenteParams) {
  return num ** exponenteParams;
};

let exponenteArrow = (num, exponenteParams) => {
  return num ** exponenteParams;
};
console.log(exponente(6, 2));
console.log(exponenteArrow(6, 3));

Otra forma de declararla en una linea

let exponenteArrow2 = (num, exponenteParams) => num ** exponenteParams;

------------------------------------------------------------------------------------------------

Clase 5

Objetos

las Funciones se pueden declarar de esta forma:

function Usuario(nombre, email, password) {
  this.nombre = nombre;
  this.email = email;
  this.password = password;
}

const usuario1 = new Usuario("Rodrigo", "mailtest@gmail.com", "12345");
const usuario2 = new Usuario("Saul", null, "abcde");

function tieneEmail(usuario) {
  if (usuario.email) {
    return true;
  } else {
    return false;
  }
}

pero se recomienda usar de esta forma, como clases:

class Usuario {
  constructor(nombre, email, password) {
    this.nombre = nombre;
    this.email = email;
    this.password = password;
  }

  tieneEmail() {
    if (this.email) {
      return true;
    } else {
      return false;
    }
  }

  cambiarPass(nuevaPass) {
    this.password = nuevaPass;
  }
}

------------------------------------------------------------------------------------------------
Clase 6: Arrays - Arreglos

let primerArray = [true, 2, 'hi', [1, 2, 3]]
console.log(primerArray)

Un array o arreglo puede tener elemento de distintos tipos

Se muestran sus posiciones de 0 a X, en este caso al ser 4 elementos se muestran de 0 a 3

console.log("primerArray[2]: ", primerArray[2]) muestra el elemento de la posición 2
console.log("primerArray.length: ", primerArray.length) muestra la cantidad de elementos en el array

for con array:

for (let i = 0; i < primerArray.length; i++) {
    console.log(`Array nro ${i} ${primerArray[i]}`)
}

Agregar elementos a los arrays:

primerArray.push("Elemento agregado al final")
primerArray.unshift("Elemento agregado al principio")

Eliminar elementos

segundoArray.pop() borra último elemento
segundoArray.shift() borra primer elemento

animales.splice(1,1) splice se define la posición que se quiere eliminar y cuantos elementos a partir del indicado se borran

array.splice(1,3)    borra posición 1, 2, 3

Convertir array a string:

let saludar = ['hola', 'como estas', '?']
saludar.join('')

let saludar = ['hola', 'como estas', '?']
console.log(saludar.join('')) muestra -> holacomo estas?

let saludar = ['hola', 'como estas', '?']
console.log(saludar.join(',')) muestra -> hola,como estas,?

let saludar = ['hola', 'como estas', '?']
console.log(saludar.join(' ')) muestra -> hola como estas ?

Unir arrays:

primerArray.concat(segundoArray)

Que hay en los arreglos?:

let numeroPregunta = parseInt(prompt('Que número quieres averiguar?'))

let indice = numeros.indexOf(numeroPregunta)  indica en que posición se encuentra el numero ingresado, si no existe indica la posición -1

let existeNumero = numeros.includes(numeroPregunta) indica si existe ese numero en el array, devuelve true or false

------------------------------------------------------------------------------------------------
Clase 7: Funciones de orden superior

function elevar(n) {
    return function (n) {
        return m ** n
    }

}

let cuadrado = elevar(2)
let cubo = elevar(3)
let cuatro = elevar(4)

console.log(cuadrado(7))
Acá la función quedaría 7 ** 2 --> muestra 49

Metodos de array:

En vez de pasar por el array con for
for (let i = 0; i < arregloNum.length; i++) {
    console.log(arregloNum[i])
}
lo reemplazamos por este forEach que pasa por todos los objetos
arregloObjeto.forEach(obj=>console.log(obj))

------------------------------------------------------------------------------------------------
Clase 8: DOM

// console.log(document)
// console.log(document.body)

// document.getElementById('titulo')
// console.log(document.getElementById('titulo'))

// const titulo1 = document.getElementById('titulo')
// console.log(titulo1)

// const titulo2 = document.getElementsByTagName('h1')
// console.log(titulo2)

// const titulo3 = document.getElementsByClassName('clase-titulo')
// console.log(titulo3)

// const tituloQueryClass = document.querySelector('.clase-titulo')
const tituloQueryClass = document.querySelectorAll('.clase-titulo')
console.log(tituloQueryClass)
// querySelectorAll muestra todos los que tengan la clase "clase-titulo"
// querySelector muestra el primero que tengan la clase "clase-titulo"

const tituloQueryId = document.querySelector('#titulo')
console.log(tituloQueryId)

const tituloQueryEtiqueta = document.querySelector('h1')
console.log(tituloQueryEtiqueta)

------------------------------------------------------------------------------------------------

Clase 9: Eventos

Primera forma de escuchar Eventos

boton1.addEventListener('click', clickFunction)

function clickFunction() {
    console.log(('Haciendo click en el primer botón'))
}

div1.addEventListener('mousemove', mouveFunction)
function mouveFunction() {
    console.log(('Moviendo el mouse en el div azul'))
}

div1.addEventListener('mouseout', outFunction)
function outFunction() {
    console.log(('Out mouse en el div azul'))
}
div1.addEventListener('mouseout', () => {
    console.log(('Out mouse en el div azul'))
})

Segunda forma de escuchar Eventos
------------------------------------------------------------------------------------------------
Clase 10: Storage

localStorage
sessionStorage

const nombre = localStorage.setItem('name')
const edad = localStorage.setItem('edad')
console.log(edad,nombre) // Devuelve resultado pero de tipo string (no numero)

------------------------------------------------------------------------------------------------